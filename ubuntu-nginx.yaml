---
AWSTemplateFormatVersion: '2010-09-09'
Description: Creates an Ubuntu 16.04 Web Server based on https://github.com/widdix/learn-cloudformation/blob/master/lab0-create-stack/demo.yaml, last access 9/6/2017

Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SSHLocation:
    Description: ' The IP address range that can be used to SSH to the EC2 instances'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 131.247.0.0/16
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
    
Mappings:
  Region2AMI:
    us-east-1:
      AMI: ami-cd0f5cb6
    us-east-2:
      AMI: ami-10547475
    us-west-1:
      AMI: ami-09d2fb69
    us-west-2:
      AMI: ami-6e1a0117
    ca-central-1:
      AMI: ami-b3d965d7
    eu-west-1:
      AMI: ami-785db401
    eu-west-2:
      AMI: ami-996372fd
    eu-central-1:
      AMI: ami-1e339e71
    ap-northeast-1:
      AMI: ami-ea4eae8c
    ap-northeast-2:
      AMI: ami-d28a53bc
    ap-southeast-1:
      AMI: ami-6f198a0c
    ap-southeast-2:
      AMI: ami-e2021d81
    ap-south-1:
      AMI: ami-099fe766
    sa-east-1:
      AMI: ami-10186f7c

Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [Region2AMI, !Ref 'AWS::Region', 'AMI']
      InstanceType: t2.micro
      SecurityGroups: 
      - !Ref WebserverSecurityGroup
      Tags:
      - Key: Name
        Value: Ubuntu 16.04 nginx web server | SSH enabled
      KeyName: !Ref KeyName
      UserData:
        'Fn::Base64': |
          #!/bin/bash
          set -e
          set -x
          # Set timezone
          sudo timedatectl set-timezone America/New_York
          
          # fix color of directory, which in PuTTy ends up as dark blue on 
          # black background
          bashrc_append=$(cat <<'EOT'
          d=.dircolors
          test -r $d && eval "$(dircolors $d)"
          EOT
          )
          echo "$bashrc_append" >> /home/ubuntu/.bashrc
          dircolors -p > /home/ubuntu/.dircolors
          sed -i -e 's/DIR 01;.*/DIR 01;36 # directory/' /home/ubuntu/.dircolors
          sudo chown ubuntu:ubuntu /home/ubuntu/.dircolors
          # nginx web server installation commands
          sudo apt-get update
          sudo apt-get -y install nginx
          sudo /etc/init.d/nginx start
          # creates the default html page
          cd /var/www/html
          echo "<h1>Koltin Hall</h1><p>"$(curl -s http://169.254.169.254/latest/meta-data/public-hostname) "|" $(curl http://169.254.169.254/latest/dynamic/instance-identity/document | grep region)"</p>" > index.html
  WebserverSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: nginx web server - ubuntu 16.04
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: 80
        IpProtocol: tcp
        ToPort: 80
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref SSHLocation
Outputs:
  HelloWorldURL:
    Description: The url pointing to our page.
    Value: !Sub 'http://${EC2Instance.PublicIp}'
  PublicDNSURL:
    Description: The url pointing to our page.
    Value: !Sub 'http://${EC2Instance.PublicDnsName}'
  Region:
    Value: !Ref 'AWS::Region'